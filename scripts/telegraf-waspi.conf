###############################################################################
#                Global settings - you don't need to edit these               #
###############################################################################

# Global tags can be specified here in key="value" format.
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  ## For the plant monitor demo you dont need to change any these settings
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false

[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]
  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

[[inputs.exec]]
#  commands = ["/usr/bin/vcgencmd measure_temp"]
#  name_override = "temperature_gpu"
#  data_format = "grok"
#  grok_patterns = ["%{NUMBER:value:float}"]

[[inputs.temp]]

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

# Read metrics from MQTT
[[inputs.mqtt_consumer]]
  ## MQTT broker URLs to be used. The format should be scheme://host:port,
  servers = ["mqtt:// YOUR-MQTT-SERVER : 1884"]
  ## MQTT QoS, must be 0, 1, or 2
  #qos = 0
  # If empty, a random client ID will be generated.
  client_id = ""

  ## Username and password to connect MQTT server - TTN MQTT.
  username = "YOUR-MQTT-USERNAME" 
  password = "YOUR-MQTT-PASSWORD" 

  ## Topics to subscribe to 
  topics = ["#"]

  ## Data Format for consumption
  ## View https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
  json_query = "content"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb_v2]] 
  # URLS for InfluxDB eg: http://influxdb:8086
  urls = ["http:// YOUR-LOCAL-URL :8086"]
  ## Token for authentication.
  #token = "$INFLUX_TOKEN"
  token = "YOUR-INFLUX-TOKEN"
  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "YOUR-ORG-NAME"
  ## Destination bucket to write into.
  bucket = "YOUR-BUCKET-NAME"
